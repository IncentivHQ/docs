{
  "openapi": "3.1.0",
  "info": {
    "title": "IncentiView Indexer API",
    "description": "API endpoint for listing blocks from the Incentiv Blockchain via the IncentiView indexer.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://indexer.testnet.incentiv.net/api"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/home/search": {
      "get": {
        "summary": "Global Search",
        "description": "Performs a global search across the Incentiv blockchain index. \nThis endpoint enables querying of all major entity types such as addresses, blocks, transactions, user operations, and assets \nusing a free-form query string.\n\nUseful for implementing search bars or unified lookup features in dApps or explorers.\n",
        "operationId": "searchHome",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "description": "The search term to lookup. Can include full or partial hashes, addresses, or INS-style names.",
            "schema": {
              "type": "string",
              "example": "0xabc123..."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of matching search results across various entity types.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of the matched entity (e.g., block, transaction, userOperation)"
                          },
                          "id": {
                            "type": "string",
                            "description": "Identifier or primary key (e.g., hash or address)"
                          },
                          "label": {
                            "type": "string",
                            "description": "Human-readable label or summary of the entity"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "Additional metadata depending on the type"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Likely missing the `query` parameter."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "tags": [
          "Home"
        ]
      }
    },
    "/blocks": {
      "get": {
        "summary": "List Blocks",
        "description": "Retrieve a list of blocks with optional filters for timestamp and block number range.",
        "parameters": [
          {
            "name": "fromTimestamp",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "toTimestamp",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "fromBlockNumber",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "toBlockNumber",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "A list of block metadata entries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "pageable": {
                      "type": "integer"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Block"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/blocks/{hashOrNumber}": {
      "get": {
        "summary": "Get Block",
        "description": "Retrieve detailed information about a specific block using either its number or hash.",
        "parameters": [
          {
            "name": "hashOrNumber",
            "in": "path",
            "required": true,
            "description": "Block number (integer) or block hash (hex string).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fetchTransactions",
            "in": "query",
            "required": false,
            "description": "Include the list of transactions in the block.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed block information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockDetails"
                },
                "examples": {
                  "example": {
                    "summary": "Sample Block",
                    "value": {
                      "hash": "0xabc...",
                      "number": 12345,
                      "timestamp": 1748340000,
                      "miner": "0xMinerAddress",
                      "txCount": 4,
                      "userOpCount": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Block not found"
          }
        }
      }
    },
    "/blocks/{hashOrNumber}/transactions": {
      "get": {
        "summary": "Get Block Transactions",
        "description": "Retrieve all transactions that are included in the specified block.",
        "parameters": [
          {
            "name": "hashOrNumber",
            "in": "path",
            "required": true,
            "description": "Block number or hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transaction"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blocks/{hashOrNumber}/useroperations": {
      "get": {
        "summary": "Get Block UserOperations",
        "description": "Retrieve all UserOperations (Account Abstraction) within a specified block.",
        "parameters": [
          {
            "name": "hashOrNumber",
            "in": "path",
            "required": true,
            "description": "Block number or hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of UserOperations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserOperation"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  
  "components": {
    "schemas": {
      "Block": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          },
          "number": {
            "type": "integer"
          },
          "timestamp": {
            "type": "integer"
          },
          "gasUsed": {
            "type": "string"
          },
          "gasLimit": {
            "type": "string"
          },
          "baseFeePerGas": {
            "type": "string"
          },
          "miner": {
            "type": "string"
          },
          "txCount": {
            "type": "integer"
          },
          "userOpCount": {
            "type": "integer"
          }
        },
        "required": [
          "hash",
          "number",
          "timestamp"
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "BlockDetails": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          },
          "number": {
            "type": "integer"
          },
          "timestamp": {
            "type": "integer"
          },
          "miner": {
            "type": "string"
          },
          "txCount": {
            "type": "integer"
          },
          "userOpCount": {
            "type": "integer"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        },
        "required": [
          "hash",
          "number",
          "timestamp"
        ]
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          },
          "blockHash": {
            "type": "string"
          },
          "blockNumber": {
            "type": "integer"
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "gasUsed": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          }
        },
        "required": [
          "hash",
          "blockNumber",
          "from",
          "to"
        ]
      },
      "UserOperation": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          },
          "sender": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "success": {
            "type": "boolean"
          }
        },
        "required": [
          "hash",
          "sender",
          "to",
          "success"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}